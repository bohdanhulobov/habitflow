// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  // Relations
  habits        Habit[]
  habitLogs     HabitLog[]

  @@map("users")
}

// Habit model - core entity
model Habit {
  id          String      @id @default(cuid())
  title       String
  description String?
  color       String      @default("#3B82F6")
  icon        String?
  frequency   Frequency   @default(DAILY)
  targetValue Int         @default(1) @map("target_value")
  unit        String?     // e.g., "times", "minutes", "pages"
  isActive    Boolean     @default(true) @map("is_active")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  
  // Relations
  userId      String      @map("user_id")
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  logs        HabitLog[]

  @@map("habits")
}

// Habit log for tracking completion
model HabitLog {
  id          String   @id @default(cuid())
  date        DateTime @db.Date
  value       Int      @default(1) // How much was completed
  notes       String?
  createdAt   DateTime @default(now()) @map("created_at")
  
  // Relations
  habitId     String   @map("habit_id")
  habit       Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([habitId, date])
  @@map("habit_logs")
}

// Enums
enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
  CUSTOM
}
